// plugins {
// 	id 'org.springframework.boot' version '2.4.4'
// 	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
// 	id 'java'
// }

/**
 * USE build scripts not plugins
 */
buildscript {
    ext {
        springBootVersion='2.5.1'
        springCloudVersion='2020.0.3'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

description = "BeSpringBoot package from the myTeamProject"
ext {
    developerId = "myTyeam"
    developerName = "myTyeam"
    developerEmail = "myTyeam@myTeam.my"
}


def projectFullName = "${name}-${version}"+".jar"
def distName = "${name}-${version}"+".zip"
println "Project artifact  ${projectFullName}"

/*
* MODULE FEDERATION SUPPORT
*/

task copyFiles(type: Copy){
    println "Copy angular distribution "
 
        from "../FeNGapp/dist/FeNGapp" 
        into "src/main/resources/static"
        exclude "**/*.tgz"
 
}

processResources.dependsOn("copyFiles")

/***
 * SPRING DEPENDENCY
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	    // add additional service dependencies below

	implementation ('com.pdflib:pdflib:9.0.1')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('io.micrometer:micrometer-registry-prometheus:1.2.0')
	runtime('com.h2database:h2')

	testImplementation('com.google.jimfs:jimfs:1.1')
testImplementation('io.rest-assured:rest-assured:3.0.2')
	testImplementation('com.fasterxml.jackson.module:jackson-module-jsonSchema:2.9.2')
    	testImplementation ('org.springframework.boot:spring-boot-starter-test')
    	testImplementation ('org.springframework.restdocs:spring-restdocs-mockmvc')
}
/**
* SET TEST PLATFORM 
*/
test {
	useJUnitPlatform()
}


configurations {
    // How to publish SpringBoot Projects
    // https://docs.gradle.org/current/userguide/upgrading_version_6.html#publishing_spring_boot_applications
   [apiElements, runtimeElements].each {
       it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
       it.outgoing.artifact(bootJar)
   }
   
    // 
    compileOnly {
		extendsFrom annotationProcessor
	}
}

/**
* DEFINE WHAT TO PUBLISH
**/
publishing {
        publications {
            mavenPublication(MavenPublication) {               
               artifact testJar
                // artifact sourceTestJar
                // artifact sourceIntegTestJar
                // artifact integTestJar
            }
        }
    }
